// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Nodes.Pathing {
  public static partial class PathingService
  {
    static readonly string __ServiceName = "PathingService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.RestartRequest> __Marshaller_RestartRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.RestartRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.RestartResponse> __Marshaller_RestartResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.RestartResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.ListLoadedNavmeshesRequest> __Marshaller_ListLoadedNavmeshesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.ListLoadedNavmeshesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.ListLoadedNavmeshesResponse> __Marshaller_ListLoadedNavmeshesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.ListLoadedNavmeshesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.PathingRequest> __Marshaller_PathingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.PathingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.PathingResponse> __Marshaller_PathingResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.PathingResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.GetRandomPointRequest> __Marshaller_GetRandomPointRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.GetRandomPointRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.GetRandomPointResponse> __Marshaller_GetRandomPointResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.GetRandomPointResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.GetClosestPointRequest> __Marshaller_GetClosestPointRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.GetClosestPointRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.GetClosestPointResponse> __Marshaller_GetClosestPointResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.GetClosestPointResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Nodes.Pathing.HangRequest> __Marshaller_HangRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Nodes.Pathing.HangRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Nodes.Pathing.RestartRequest, global::Nodes.Pathing.RestartResponse> __Method_Restart = new grpc::Method<global::Nodes.Pathing.RestartRequest, global::Nodes.Pathing.RestartResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Restart",
        __Marshaller_RestartRequest,
        __Marshaller_RestartResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Nodes.Pathing.ListLoadedNavmeshesRequest, global::Nodes.Pathing.ListLoadedNavmeshesResponse> __Method_ListLoadedNavmeshes = new grpc::Method<global::Nodes.Pathing.ListLoadedNavmeshesRequest, global::Nodes.Pathing.ListLoadedNavmeshesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLoadedNavmeshes",
        __Marshaller_ListLoadedNavmeshesRequest,
        __Marshaller_ListLoadedNavmeshesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse> __Method_GetPathStraight = new grpc::Method<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPathStraight",
        __Marshaller_PathingRequest,
        __Marshaller_PathingResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse> __Method_GetPathStreamed = new grpc::Method<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "GetPathStreamed",
        __Marshaller_PathingRequest,
        __Marshaller_PathingResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Nodes.Pathing.GetRandomPointRequest, global::Nodes.Pathing.GetRandomPointResponse> __Method_GetRandomPoint = new grpc::Method<global::Nodes.Pathing.GetRandomPointRequest, global::Nodes.Pathing.GetRandomPointResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRandomPoint",
        __Marshaller_GetRandomPointRequest,
        __Marshaller_GetRandomPointResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Nodes.Pathing.GetClosestPointRequest, global::Nodes.Pathing.GetClosestPointResponse> __Method_GetClosestPoint = new grpc::Method<global::Nodes.Pathing.GetClosestPointRequest, global::Nodes.Pathing.GetClosestPointResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClosestPoint",
        __Marshaller_GetClosestPointRequest,
        __Marshaller_GetClosestPointResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Nodes.Pathing.HangRequest, global::Nodes.Pathing.HangRequest> __Method_HangTest = new grpc::Method<global::Nodes.Pathing.HangRequest, global::Nodes.Pathing.HangRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HangTest",
        __Marshaller_HangRequest,
        __Marshaller_HangRequest);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Nodes.Pathing.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PathingService</summary>
    [grpc::BindServiceMethod(typeof(PathingService), "BindService")]
    public abstract partial class PathingServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Nodes.Pathing.RestartResponse> Restart(global::Nodes.Pathing.RestartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Nodes.Pathing.ListLoadedNavmeshesResponse> ListLoadedNavmeshes(global::Nodes.Pathing.ListLoadedNavmeshesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Nodes.Pathing.PathingResponse> GetPathStraight(global::Nodes.Pathing.PathingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetPathStreamed(grpc::IAsyncStreamReader<global::Nodes.Pathing.PathingRequest> requestStream, grpc::IServerStreamWriter<global::Nodes.Pathing.PathingResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Nodes.Pathing.GetRandomPointResponse> GetRandomPoint(global::Nodes.Pathing.GetRandomPointRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Nodes.Pathing.GetClosestPointResponse> GetClosestPoint(global::Nodes.Pathing.GetClosestPointRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Nodes.Pathing.HangRequest> HangTest(global::Nodes.Pathing.HangRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PathingService</summary>
    public partial class PathingServiceClient : grpc::ClientBase<PathingServiceClient>
    {
      /// <summary>Creates a new client for PathingService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PathingServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PathingService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PathingServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PathingServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PathingServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.RestartResponse Restart(global::Nodes.Pathing.RestartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Restart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.RestartResponse Restart(global::Nodes.Pathing.RestartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Restart, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.RestartResponse> RestartAsync(global::Nodes.Pathing.RestartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.RestartResponse> RestartAsync(global::Nodes.Pathing.RestartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Restart, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.ListLoadedNavmeshesResponse ListLoadedNavmeshes(global::Nodes.Pathing.ListLoadedNavmeshesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoadedNavmeshes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.ListLoadedNavmeshesResponse ListLoadedNavmeshes(global::Nodes.Pathing.ListLoadedNavmeshesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLoadedNavmeshes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.ListLoadedNavmeshesResponse> ListLoadedNavmeshesAsync(global::Nodes.Pathing.ListLoadedNavmeshesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoadedNavmeshesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.ListLoadedNavmeshesResponse> ListLoadedNavmeshesAsync(global::Nodes.Pathing.ListLoadedNavmeshesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLoadedNavmeshes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.PathingResponse GetPathStraight(global::Nodes.Pathing.PathingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPathStraight(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.PathingResponse GetPathStraight(global::Nodes.Pathing.PathingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPathStraight, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.PathingResponse> GetPathStraightAsync(global::Nodes.Pathing.PathingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPathStraightAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.PathingResponse> GetPathStraightAsync(global::Nodes.Pathing.PathingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPathStraight, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse> GetPathStreamed(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPathStreamed(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse> GetPathStreamed(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_GetPathStreamed, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.GetRandomPointResponse GetRandomPoint(global::Nodes.Pathing.GetRandomPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRandomPoint(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.GetRandomPointResponse GetRandomPoint(global::Nodes.Pathing.GetRandomPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRandomPoint, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.GetRandomPointResponse> GetRandomPointAsync(global::Nodes.Pathing.GetRandomPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRandomPointAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.GetRandomPointResponse> GetRandomPointAsync(global::Nodes.Pathing.GetRandomPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRandomPoint, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.GetClosestPointResponse GetClosestPoint(global::Nodes.Pathing.GetClosestPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClosestPoint(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.GetClosestPointResponse GetClosestPoint(global::Nodes.Pathing.GetClosestPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClosestPoint, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.GetClosestPointResponse> GetClosestPointAsync(global::Nodes.Pathing.GetClosestPointRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClosestPointAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.GetClosestPointResponse> GetClosestPointAsync(global::Nodes.Pathing.GetClosestPointRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClosestPoint, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.HangRequest HangTest(global::Nodes.Pathing.HangRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HangTest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Nodes.Pathing.HangRequest HangTest(global::Nodes.Pathing.HangRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_HangTest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.HangRequest> HangTestAsync(global::Nodes.Pathing.HangRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HangTestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Nodes.Pathing.HangRequest> HangTestAsync(global::Nodes.Pathing.HangRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_HangTest, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override PathingServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PathingServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(PathingServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Restart, serviceImpl.Restart)
          .AddMethod(__Method_ListLoadedNavmeshes, serviceImpl.ListLoadedNavmeshes)
          .AddMethod(__Method_GetPathStraight, serviceImpl.GetPathStraight)
          .AddMethod(__Method_GetPathStreamed, serviceImpl.GetPathStreamed)
          .AddMethod(__Method_GetRandomPoint, serviceImpl.GetRandomPoint)
          .AddMethod(__Method_GetClosestPoint, serviceImpl.GetClosestPoint)
          .AddMethod(__Method_HangTest, serviceImpl.HangTest).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PathingServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Restart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Nodes.Pathing.RestartRequest, global::Nodes.Pathing.RestartResponse>(serviceImpl.Restart));
      serviceBinder.AddMethod(__Method_ListLoadedNavmeshes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Nodes.Pathing.ListLoadedNavmeshesRequest, global::Nodes.Pathing.ListLoadedNavmeshesResponse>(serviceImpl.ListLoadedNavmeshes));
      serviceBinder.AddMethod(__Method_GetPathStraight, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse>(serviceImpl.GetPathStraight));
      serviceBinder.AddMethod(__Method_GetPathStreamed, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Nodes.Pathing.PathingRequest, global::Nodes.Pathing.PathingResponse>(serviceImpl.GetPathStreamed));
      serviceBinder.AddMethod(__Method_GetRandomPoint, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Nodes.Pathing.GetRandomPointRequest, global::Nodes.Pathing.GetRandomPointResponse>(serviceImpl.GetRandomPoint));
      serviceBinder.AddMethod(__Method_GetClosestPoint, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Nodes.Pathing.GetClosestPointRequest, global::Nodes.Pathing.GetClosestPointResponse>(serviceImpl.GetClosestPoint));
      serviceBinder.AddMethod(__Method_HangTest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Nodes.Pathing.HangRequest, global::Nodes.Pathing.HangRequest>(serviceImpl.HangTest));
    }

  }
}
#endregion
